# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write # Added permission for check creation

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Grant execute permission
        run: chmod +x ./gradlew

      - name: Test
        run: ./gradlew :test --tests "app.quantun.eb2c.AllTestsRunner"

      # Use the built-in test report XML format
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # Always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          fail_on_failure: false
          require_tests: false
          check_name: Gradle Test Results

      - name: Upload test reports
        if: success() || failure() # Always run even if the previous step fails
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/reports/tests/
            **/build/test-results/ 

      # Setup Pages
      - name: Setup Pages
        if: github.ref == 'refs/heads/master'
        uses: actions/configure-pages@v4

      # Copy HTML test reports to a central location for pages deployment
      - name: Prepare HTML test reports for Pages
        if: github.ref == 'refs/heads/master'
        run: |
          mkdir -p public
          cp -R */build/reports/tests/test/* public/ || echo "No test reports found"

      # Upload HTML test reports as Pages artifact
      - name: Upload Pages artifact
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: grad
  docker:
    #needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3



      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3

        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      #      - name: Build and push Native Docker image 2025
      #        uses: docker/build-push-action@v5
      #        with:
      #          context: .
      #          file: ./Dockerfile.native
      #          push: true
      #          platforms: linux/amd64
      #          tags: maxiplux/b2b-commerce-native:latest,maxiplux/b2b-commerce-native:${{ github.sha }}

      - name: Build and push JVM Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: maxiplux/b2b-commerce:latest,maxiplux/b2b-commerce:${{ github.sha }}